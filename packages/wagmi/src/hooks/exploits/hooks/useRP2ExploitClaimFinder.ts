'use client'

import { useMemo } from 'react'
import { Address } from 'wagmi'
import { z } from 'zod'

import {
  RP2ClaimChainIds,
  RP2MerkleTree,
  RP2MerkleTreeClaimSchema,
  RP2MerkleTreeSchema,
} from '../constants'
import { RP2ClaimChainId } from '../types'

interface UseRP2ExploitCheck {
  account: Address | undefined
}

export const useRP2ExploitClaimFinder = ({ account }: UseRP2ExploitCheck) => {
  return useMemo(() => {
    return RP2ClaimChainIds.reduce<
      [RP2ClaimChainId, z.TypeOf<typeof RP2MerkleTreeClaimSchema>][]
    >((acc, cur) => {
      const claims = RP2MerkleTreeSchema.parse(
        RP2MerkleTree[cur],
      ).claims.filter((el) => el.user.toLowerCase() === account?.toLowerCase())

      claims.forEach((claim) => {
        acc.push([cur, claim])
      })

      return acc
    }, [])
  }, [account])
}
